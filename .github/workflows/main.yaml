# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on:
  push:
  pull_request:

jobs:
  # Always run
  lint_and_type_check:
    name: Lint and type check
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          pip install pre-commit
      - name: Lint and type check
        run: |
          pre-commit run --all-files --verbose --show-diff-on-failure

  # Always run
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install package with dependencies
        run: |
          pip install .[tests]
      - name: Test with pytest
        run: |
          coverage run -m pytest && coverage report -m
      - name: Upload coverage to gist
        uses: schneegans/dynamic-badges-action@v1.1.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: da9e3419b54a0daf6fe07b934f37f837
          filename: test.json
          label: Hello
          message: World
          color: orange

  # Release only when pushed to or merged into `main`
  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    if: |
      (
        (
          github.event_name == 'pull_request'
          && github.event.pull_request.base.ref == 'main'
          && github.event.action == 'closed'
          && github.event.pull_request.merged == true
        ) ||
        (
          github.event_name == 'push'
          && github.ref == 'refs/heads/main'
        )
      ) &&
      github.repository == 'rozsasarpi/zandbak'
    concurrency: release
    needs: [ lint_and_type_check, test ]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Fetch main
        run: |
          git fetch --prune origin +refs/heads/main:refs/remotes/origin/main
      - name: Python Semantic Release
        uses: relekang/python-semantic-release@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pypi_token: ${{ secrets.PYPI_TOKEN }}
